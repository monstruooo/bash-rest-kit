#!/bin/bash


function incap_examples () {
# Turning rules[] from array to object with objects. 
# You can then extract rules like this: jq '.rules["api.acl.blacklisted_countries"]'

incapsula_site_status 101578098  | jq '.security.acls.rules[] | { (.id): .|del(.id) }' | jq -s 'add | { rules: . }'

}

function incap_find_lb_by_origin ()
{
    incapsula_conf_print | jq -r ' .sites[].ips[]' | tr A-Z a-z | sort | uniq -c | sort -n -k 1 | grep ".*$1";
}

function incap_find_site_by_origin ()
{
    if [[ -n $1 ]]; then
        incapsula_conf_print | jq -r ' .sites[] | select(.ips[] | capture("'$1'";"i"))| .domain ' | sort -V
    fi
}

function incap_site () {
local usage='
	incap site add domain=test.com set_ip=1.2.3.4 account_id=123456'
case $1 in
	add)
		shift 
		local domain account_id site_ip site_id api_args res
		args_to_vars "$@"
		api_args="site_ip=$site_ip&domain=${domain}&account_id=${account_id}&send_site_setup_emails=false&force_ssl=true"
		if res=$(incapsula_api "$api_args" https://my.incapsula.com/api/prov/v1/sites/add)
		then
		    site_id=$( jq -n -r "${res:-None} | .site_id")
			echo -n "Setting ignore_ssl to read the incapdns record: "
			incapsula_api "site_id=${site_id}&param=ignore_ssl&value=true" prov/v1/sites/configure | $jq .res_message
		else
		    echo Failed to create site
		    return 1
		fi
		res=$( incapsula_site_status $site_id)
		echo '{ "sites" : [ '"$res"' ]}' > $incap_work_dir/accounts/incapsula_conf_${account_id}_${site_id}
	;;
esac

}

function incap_ssl_by_email () {

[[ -z $1 ]] && { return || exit ;  }
site_id=$(incapsula_site_id_from_name $1)

incapsula_api "site_id=$site_id&domain=$1" prov/v1/domain/emails | 
	jq -r '"\nApprover emails '$1':\n" , .domain_emails[] + "\n"'

echo Press Enter to skip
read -p "Validation Email: " ssl_email

[[ -z $ssl_email ]] && 
	{ return || exit ; }

    {
incapsula_api "site_id=$site_id&param=approver&value=$ssl_email" prov/v1/sites/configure ;
incapsula_api "site_id=$site_id&param=domain_validation&value=email" prov/v1/sites/configure ;
    } |
	jq -r '"", { domain, status, statusEnum, ssl, res, res_message, debug_info }'

} # end function incap_ssl_by_email
