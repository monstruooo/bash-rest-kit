#!/bin/bash

function dyn_domain_add () {
[[ -n $3 ]] && local domain=$1 rname=$2 ttl=$3 || return 1
local data=$( jq -c --arg rname $rname --arg ttl $ttl -n '{$rname, ttl: $ttl|tonumber }' )
dyn_debug '
	Output: {"rname":"dnsadmin.spotoption.com","ttl":1800}'
dyn_api -X POST --data "$data" $dyn_api/REST/Zone/$domain/ 

dyn publish zone $domain
}

function dyn_rm () {
[[ -n $1 ]] && local domain=$1 || return 1
shift 
if [[ -z $1 ]] ; then
	read -n 1 -p "Press Y/y to delete domain $domain: " ; read_nl
	if [[ x$REPLY == x[Yy] ]] ; then
		dyn_api -X DELETE  $dyn_api/REST/Zone/$domain/ 
	fi
	return
fi
local id ids fqdn name type
ids=$*
for id in $ids ; do
	read id name type < <(dyn_domain_ls $domain | egrep "^$id\s")
	[[ -z $name ]] && continue
	[[ $name == @ ]] && fqdn=$domain || fqdn=${name}.$domain
	dyn_api -X DELETE https://api.dynect.net/REST/${type}Record/${domain}/$fqdn/$id 
done
dyn publish changes $domain
}

function dyn_record_add () {
local domain=$1
shift

local name=$1 id
local format='
	spotplatform
	198286304/spotplatform
	@
	12345678/@'

id=$( echo $name | egrep -o '[0-9]+/' | egrep -o '[0-9]+' )
name=$( echo $name | sed -r 's,[0-9]+/,,')

local fqdn
local logic='
	spotplatform	-> spotplatform.oskar-test.com
	@				-> oskar-test.com'
if [[ $name == @ ]] ; then
	fqdn=$domain
else
	fqdn=$name.$domain
fi 
shift

declare -u type=$1
if ! [[ $type =~ ^(A|CNAME|TXT)$ ]] ; then
	cat <<EOF 1>&2
Record type $type not supported
Currently supported type are A,CNAME,TXT 
For other types use function  dyn api 
For more instructions consult API Knowledge Base https://help.dyn.com/rest-resources/
EOF
	return 1
fi
shift

local rdata_value="$1"
shift

local ttl=${1:-1800}

case $type in
	TXT)
		rdata_key=txtdata
		;;
	CNAME)
		rdata_key=cname
		;;
	A)
		rdata_key=address
		;;
esac
local data=$( args2json rdata.$rdata_key="$rdata_value" ttl=$ttl)

dyn_debug 'If we have the record id, we just go straight to update it and then exit'
if [[ -n $id ]] ; then
	if dyn_api -X PUT --data "$data" $dyn_api/REST/${type}Record/$domain/$fqdn/$id ; then
		dyn publish changes $domain
	fi
	return
fi

dyn_debug 'If naked, then do it right away'
if [[ x$fqdn == x$domain ]] ; then
	dyn_api -X POST --data "$data" $dyn_api/REST/${type}Record/$domain/$fqdn/ && # CNAMERecord, ARecord, TXTRecord
	dyn publish changes $domain
	return
fi

dyn_debug 'Checking if record already exists and has id'
id=$(dyn ls $domain | egrep "\s${name//./\\.}\s+$type\b" | egrep -o ^[0-9]+)
if [[ x$id =~ ^x[0-9]+$ ]] ; then
	dyn_debug 'One record exists. Updating'
	dyn_api -X PUT --data "$data" $dyn_api/REST/${type}Record/$domain/$fqdn/$id
elif [[ -z $id  ]] ; then
	dyn_api -X POST --data "$data" $dyn_api/REST/${type}Record/$domain/$fqdn/
else
	jq --arg msg "$id" -n '{ function: "'${FUNCNAME[0]}'", msgs: ["Record id doesnt make sense " + $msg] }'  | egrep --color '.*' 1>&2 
	return 1
fi &&  dyn publish changes $domain 

# local tmp=$(dyn_tmpfile)
}

