#!/bin/bash

incap_tmp_dir=/dev/shm/$USER/tmp/incapsula

function incap_cfg () {
[[ -z $incap_api_id ]] && read -s "API Key: " incap_api_id
[[ -z $incap_api_key ]] && read -s "API Key: " incap_api_id
}

function incap_context () {
case $incap_path_wd in
	accounts)
		[[ -n $incap_path_id ]] && echo account || echo accounts
		;;
	sites)
		[[ -n $incap_path_id ]] && echo site || echo sites
		;;
	'')
		echo root
		;;
esac
} #end function

function incap_pwd () {
echo -n incapsula://$incap_path_wd
if [[ -n $incap_path_name ]] ; then
	echo /${incap_path_name}:${incap_path_id}
else
	echo
fi
}

function incap_cd () {

case $1 in
	accounts|sites|'') # '' means $1 is empty
		incap_path_wd=$1 # if $1 is empty, incap_path_wd is unset, context switches to root
		unset incap_path_name incap_path_id
		return
		;;
esac

[[ x$1 == x.. ]] && case $(incap_context) in
	accounts|sites)
		unset incap_path_wd
		return
	;;
	account|site)
		unset incap_path_name incap_path_id
		return
	;;
esac

case $(incap_context) in
accounts)
    read incap_path_name incap_path_id < <( 
	incapsula_api "page_size=100&page_num=0" https://my.incapsula.com/api/prov/v1/accounts/list |
	jq -j -e '.accounts[] |
	select(.account_name=="'"$1"'" or (.account_id | tostring)=="'"$1"'") |
	.account_name , " " , (.account_id | tostring)' ) || return
;;
sites)
    read incap_path_name incap_path_id < <( 
	incapsula_conf_print |
	jq -j -e '.sites[] |
	select(.domain=="'"$1"'" or (.site_id | tostring)=="'"$1"'") |
	.domain , " " , (.site_id | tostring)' ) || return
;;
esac
}

function incap_ls () {
if [[ -z $1 ]] ; then
	if [[ -z $incap_wd ]] ; then
		echo sites
		echo accounts
	elif [[ $incap_wd == accounts ]] ; then
		if [[ -n $incap_wd_id ]] ; then
			incapsula_conf_print |
				jq -r '.sites[] | select(.account_id=='$incap_wd_id')' |
				incap_site_to_cols
		else
			{
			echo -e "Account ID\tAccount Name" ;
		    incapsula_api "page_size=100&page_num=0" https://my.incapsula.com/api/prov/v1/accounts/list |
			jq -r '.accounts | sort_by(.account_name) | .[] | (.account_id|tostring) + "\t" + .account_name' ;
			} |
			column -x -t -s$'\t'
		fi
	fi
elif [[ x$1 == xaccounts ]] ; then
	if [[ -n $2 ]] ; then
		incapsula_conf_print |
			jq -r '.sites[] | select(.account_id|tostring=="'$2'")' |
			incap_site_to_cols
	else
		{
		echo -e "Account ID\tAccount Name" ;
	    incapsula_api "page_size=100&page_num=0" https://my.incapsula.com/api/prov/v1/accounts/list |
			jq -r '.accounts | sort_by(.account_name) | .[] | (.account_id|tostring) + "\t" + .account_name' ;
		} |
			column -x -t -s$'\t'
	fi
elif [[ x$1 == xsites ]] ; then
	if [[ -n $2 ]] ; then
		incapsula_site_status $2 | incap_site_summary
	else
		incapsula_conf_print |
			jq -r '.sites[]' |
			incap_site_to_cols
	fi
fi
}

function incap_mk () {
local usage='
	incap mk test-account test.com 1.2.3.4'

	incap site add account=$1 domain=$2 ip=$3
}

function incap () {

mkdir -p $incap_tmp_dir/sites

incap_cfg
local action=$1
[[ -z $action ]] && action=help
shift
incap_${action} "$@"
} # end function incap


