#!/bin/bash

function incap_examples () {
# Turning rules[] from array to object with objects. 
# You can then extract rules like this: jq '.rules["api.acl.blacklisted_countries"]'

incap_site_status 101578098  | jq '.security.acls.rules[] | { (.id): .|del(.id) }' | jq -s 'add | { rules: . }'

}

incap_site_add () {

	local account_id=$1 domain=$2 site_ip=$3 site_id api_args res
	
	api_args="site_ip=$site_ip&domain=${domain}&account_id=${account_id}&send_site_setup_emails=false&force_ssl=true"
	echo Creating site $domain 1>$2
	if incap_api "$api_args" https://my.incapsula.com/api/prov/v1/sites/add
	then
	    site_id=$( incap site id $domain) || return
		incap_res_msg
		echo "Setting ignore_ssl to read the incapdns record: "
		incap_api "site_id=${site_id}&param=ignore_ssl&value=true" api/prov/v1/sites/configure && incap_res_msg
	else
	    return 1
	fi 1>&2
}

incap_site_rm () {
[[ -z $1 ]] && return 1
if incap api "site_id=$1" api/prov/v1/sites/delete ; then
	incap_res_msg 1>&2
	incap ls cache sites | egrep ".*_${1}$" | xargs -L 1 rm -v
fi
}

function incap_site_purge () {
local usage='
	purge cache <site id>
	purge hostname <site name>'

case $1 in
	cache)
		echo Purging site $2 cache...
		incap_api site_id=$2 api/prov/v1/sites/cache/purge && incap_res_msg
	;;
	hostname)
		echo Purging $3 from hostname cache...
		incap_api host_name=$2 api/prov/v1/sites/hostname/purge && incap_res_msg
	;;
	*)
		echo Usage: "$usage"
	;;
esac 1>&2
}

function incap_site_ssl () {
local id=$1
[[ -z $id ]] || return 1
incap_api "site_id=${id}&param=domain_validation&value=dns" api/prov/v1/sites/configure 
}


function incap_site_ip () { 
local usage='
	incap site ip <site_id> <ip|hostname>'

if [[ -z $2 ]] ; then
	echo Usage: "$usage" 1>&2
	return 1
else
	local id=$1 ip=$2
fi
	
local old_ips res
old_ips=$(incap_site_status $id | jq '.ips')
incap_api "site_id=$id&param=site_ip&value=$ip" api/prov/v1/sites/configure || return 
echo $res | 
	jq --arg old_ips "$old_ips" 'site_id , domain , new_ips: .ips, old_ips: $old_ips}'
} # end function
